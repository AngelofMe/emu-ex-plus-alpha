uniform mediump vec2 texDelta;

lowp vec4 makeFrag(const in lowp vec2 uv)
{
	precision highp float;

	const float mx = 0.325;
	const float k = -0.250;
	const float maxW = 0.25;
	const float minW =-0.05;
	const float lumAdd = 0.25;

	vec2 dg1 = vec2( texDelta.x, texDelta.y);
	vec2 dg2 = vec2(-texDelta.x, texDelta.y);
	vec2 dx = vec2(texDelta.x, 0.0);
	vec2 dy = vec2(0.0, texDelta.y);

	vec4 texCoor[5];
	texCoor[0] = vec4(uv, 0.0, 0.0);
	texCoor[1].xy = texCoor[0].xy - dg1;
	texCoor[1].zw = texCoor[0].xy - dy;
	texCoor[2].xy = texCoor[0].xy - dg2;
	texCoor[2].zw = texCoor[0].xy + dx;
	texCoor[3].xy = texCoor[0].xy + dg1;
	texCoor[3].zw = texCoor[0].xy + dy;
	texCoor[4].xy = texCoor[0].xy + dg2;
	texCoor[4].zw = texCoor[0].xy - dx;

	vec3 c00 = texture2D(tex, texCoor[1].xy).xyz;
	vec3 c10 = texture2D(tex, texCoor[1].zw).xyz;
	vec3 c20 = texture2D(tex, texCoor[2].xy).xyz;
	vec3 c01 = texture2D(tex, texCoor[4].zw).xyz;
	vec3 c11 = texture2D(tex, texCoor[0].xy).xyz;
	vec3 c21 = texture2D(tex, texCoor[2].zw).xyz;
	vec3 c02 = texture2D(tex, texCoor[4].xy).xyz;
	vec3 c12 = texture2D(tex, texCoor[3].zw).xyz;
	vec3 c22 = texture2D(tex, texCoor[3].xy).xyz;
	vec3 dt = vec3(1.0, 1.0, 1.0);

	float md1 = dot(abs(c00 - c22), dt);
	float md2 = dot(abs(c02 - c20), dt);

	float w1 = dot(abs(c22 - c11), dt) * md2;
	float w2 = dot(abs(c02 - c11), dt) * md1;
	float w3 = dot(abs(c00 - c11), dt) * md2;
	float w4 = dot(abs(c20 - c11), dt) * md1;

	float t1 = w1 + w3;
	float t2 = w2 + w4;
	float ww = max(t1, t2) + 0.0001;

	c11 = (w1 * c00 + w2 * c20 + w3 * c22 + w4 * c02 + ww * c11) / (t1 + t2 + ww);

	float lc1 = k / (0.12 * dot(c10 + c12 + c11, dt) + lumAdd);
	float lc2 = k / (0.12 * dot(c01 + c21 + c11, dt) + lumAdd);

	w1 = clamp(lc1 * dot(abs(c11 - c10), dt) + mx, minW, maxW);
	w2 = clamp(lc2 * dot(abs(c11 - c21), dt) + mx, minW, maxW);
	w3 = clamp(lc1 * dot(abs(c11 - c12), dt) + mx, minW, maxW);
	w4 = clamp(lc2 * dot(abs(c11 - c01), dt) + mx, minW, maxW);

	return vec4(w1 * c10 + w2 * c21 + w3 * c12 + w4 * c01 + (1.0 - w1 - w2 - w3 - w4) * c11, 1.0);
}
